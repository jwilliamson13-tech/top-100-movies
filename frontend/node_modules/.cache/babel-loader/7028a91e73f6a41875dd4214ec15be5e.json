{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\top-100-movies\\\\top-100-movies\\\\frontend\\\\src\\\\components\\\\profiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DataService from \"../services/userDataService\";\nimport ProfileCard from \"./profileCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = props => {\n  _s();\n\n  const [profiles, setProfiles] = useState([]);\n  const [searchName, setSearchName] = useState(\"\");\n  useEffect(() => {\n    retrieveUsers();\n  }, []);\n\n  const onChangeSearchName = e => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const retrieveUsers = () => {\n    DataService.getUsers().then(response => {\n      console.log(\"USERS\");\n      console.log(response.data);\n      setProfiles(response.data); //Gonna have to change this to match data received\n    });\n  };\n\n  const retrieveUser = searchName => {\n    if (searchName.length == 0) {\n      retrieveUsers();\n    } else {\n      var filteredUsers = profiles.filter(user => user.email.toLowerCase().includes(searchName.toLowerCase()));\n      setProfiles(filteredUsers);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pr-5 pl-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Search for Profiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group col-lg-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by name\",\n          value: searchName,\n          onChange: onChangeSearchName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: () => retrieveUser(searchName) //Need to add on click event and state event here\n            ,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-3 pb-3 justify-content-center\",\n      children: profiles.map(currentProfile => {\n        console.log(currentProfile);\n        var favorite_movie = \"\";\n\n        if (currentProfile.favorite_movies.length > 0) {\n          favorite_movie = currentProfile.favorite_movies[0].original_title; //Have to change this if using a map\n        } else {\n          favorite_movie = \"NONE\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(ProfileCard, {\n          profile: {\n            \"email\": currentProfile.email,\n            \"favorite_movies_length\": currentProfile.favorite_movies.length,\n            \"favorite_movie\": favorite_movie,\n            \"_id\": currentProfile._id\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n/*\r\n{\r\n  movies.map(currentMovie => {\r\n    var movieImage = currentMovie.poster_path ? \"https://image.tmdb.org/t/p/w185/\" + currentMovie.poster_path : \"./NoMovieImage.jpg\"\r\n    return(\r\n      <MovieCard movie={{\"name\":currentMovie.original_title, \"description\":currentMovie.overview, \"image\":movieImage}}/>\r\n    )\r\n  })\r\n}\r\n*/\n//{movies.map((movies) =>{\n//<MovieCard movie={{\"name\":\"Mean Girls\",\"description\":\"Girls are mean. I don't know what you expected.\",\"image\":\"https://image.tmdb.org/t/p/w185/fXm3YKXAEjx7d2tIWDg9TfRZtsU.jpg\"}}/>\n//<MovieCard movie={{\"name\":\"Toy Story\",\"description\":\"Toys do some crazy shit on this wild ass adventure. Be prepared to be scared because the neighbor kid is batshit, and you'll think your own toys may come to life to kill you one day. Pick up your phobia of dolls and toys with eyes now!!!\",\"image\":\"https://image.tmdb.org/t/p/w185/uXDfjJbdP4ijW5hWSBrPrlKpxab.jpg\"}}/>\n//<MovieCard movie={{\"name\":\"Mean Girls\",\"description\":\"Girls are mean. I don't know what you expected.\",\"image\":\"https://image.tmdb.org/t/p/w185/xj3jhyq3ZsfdVn79kXC1XKFVQlv.jpg\"}}/>\n//}};\n\n\n_s(Profiles, \"ijuAq/CMPavnSogpLrLkdipuq24=\");\n\n_c = Profiles;\nexport default Profiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/top-100-movies/top-100-movies/frontend/src/components/profiles.js"],"names":["React","useState","useEffect","Link","DataService","ProfileCard","Profiles","props","profiles","setProfiles","searchName","setSearchName","retrieveUsers","onChangeSearchName","e","target","value","getUsers","then","response","console","log","data","retrieveUser","length","filteredUsers","filter","user","email","toLowerCase","includes","map","currentProfile","favorite_movie","favorite_movies","original_title","_id"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataService from \"../services/userDataService\";\r\nimport ProfileCard from \"./profileCard\"\r\n\r\nconst Profiles = props => {\r\n\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [searchName, setSearchName ] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n      retrieveUsers();\r\n    }, []);\r\n\r\n  const onChangeSearchName = e => {\r\n      const searchName = e.target.value;\r\n      setSearchName(searchName);\r\n  };\r\n\r\n  const retrieveUsers = () => {\r\n      DataService.getUsers()\r\n      .then(response => {\r\n        console.log(\"USERS\");\r\n        console.log(response.data);\r\n        setProfiles(response.data); //Gonna have to change this to match data received\r\n      })\r\n    };\r\n\r\n  const retrieveUser = (searchName) => {\r\n    if(searchName.length == 0){\r\n      retrieveUsers();\r\n    }\r\n    else{\r\n      var filteredUsers = profiles.filter(user => user.email.toLowerCase().includes(searchName.toLowerCase()));\r\n      setProfiles(filteredUsers);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pr-5 pl-5\">\r\n      <h1 className=\"text-center\">Search for Profiles</h1>\r\n      <div className=\"row pb-1\">\r\n        <div className=\"input-group col-lg-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by name\"\r\n            value={searchName}\r\n            onChange={onChangeSearchName}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={() => retrieveUser(searchName)}\r\n              //Need to add on click event and state event here\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row pt-3 pb-3 justify-content-center\">\r\n        {\r\n          profiles.map(currentProfile => {\r\n            console.log(currentProfile);\r\n            var favorite_movie = \"\";\r\n            if(currentProfile.favorite_movies.length > 0){\r\n              favorite_movie = currentProfile.favorite_movies[0].original_title //Have to change this if using a map\r\n            }\r\n            else{\r\n              favorite_movie = \"NONE\"\r\n            }\r\n            return(\r\n              <ProfileCard profile={{\"email\":currentProfile.email, \"favorite_movies_length\":currentProfile.favorite_movies.length, \"favorite_movie\":favorite_movie, \"_id\":currentProfile._id}}/>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n/*\r\n{\r\n  movies.map(currentMovie => {\r\n    var movieImage = currentMovie.poster_path ? \"https://image.tmdb.org/t/p/w185/\" + currentMovie.poster_path : \"./NoMovieImage.jpg\"\r\n    return(\r\n      <MovieCard movie={{\"name\":currentMovie.original_title, \"description\":currentMovie.overview, \"image\":movieImage}}/>\r\n    )\r\n  })\r\n}\r\n*/\r\n//{movies.map((movies) =>{\r\n//<MovieCard movie={{\"name\":\"Mean Girls\",\"description\":\"Girls are mean. I don't know what you expected.\",\"image\":\"https://image.tmdb.org/t/p/w185/fXm3YKXAEjx7d2tIWDg9TfRZtsU.jpg\"}}/>\r\n//<MovieCard movie={{\"name\":\"Toy Story\",\"description\":\"Toys do some crazy shit on this wild ass adventure. Be prepared to be scared because the neighbor kid is batshit, and you'll think your own toys may come to life to kill you one day. Pick up your phobia of dolls and toys with eyes now!!!\",\"image\":\"https://image.tmdb.org/t/p/w185/uXDfjJbdP4ijW5hWSBrPrlKpxab.jpg\"}}/>\r\n//<MovieCard movie={{\"name\":\"Mean Girls\",\"description\":\"Girls are mean. I don't know what you expected.\",\"image\":\"https://image.tmdb.org/t/p/w185/xj3jhyq3ZsfdVn79kXC1XKFVQlv.jpg\"}}/>\r\n//}};\r\n\r\nexport default Profiles;\r\n"]},"metadata":{},"sourceType":"module"}