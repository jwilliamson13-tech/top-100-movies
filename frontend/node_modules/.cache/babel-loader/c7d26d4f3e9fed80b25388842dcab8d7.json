{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\top-100-movies\\\\top-100-movies\\\\frontend\\\\src\\\\components\\\\movieCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = props => {\n  _s();\n\n  const [rank, setRank] = useState();\n\n  function isNumeric(str) {\n    if (typeof str != \"string\") {\n      return false;\n    }\n\n    return !isNaN(str) && !isNaN(parseFloat(str)); // ...and ensure strings of whitespace fail\n  }\n\n  const onChangeRank = e => {\n    var rank = e.target.value;\n    console.log(rank);\n\n    if ((rank > 100 || rank < 1) && rank) {\n      rank = \"\";\n    }\n\n    if (!isNumeric(rank) && rank) {\n      rank = \"\";\n    }\n\n    console.log(typeof rank);\n    console.log(rank);\n    setRank(rank);\n  };\n\n  function addMovie() {//Check if rank is within range and not null\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card border embbed-responsive\",\n    style: {\n      width: \"18rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img\",\n        src: props.movie.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: props.movie.currentMovie.original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: props.movie.currentMovie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-5\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Rank\",\n            value: rank,\n            onChange: onChangeRank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-7\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            children: \"Add Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieCard, \"Js7Lnw7n6Dk3wa2Beyy0vZcgMbE=\");\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/top-100-movies/top-100-movies/frontend/src/components/movieCard.js"],"names":["React","useState","Link","MovieCard","props","rank","setRank","isNumeric","str","isNaN","parseFloat","onChangeRank","e","target","value","console","log","addMovie","width","movie","image","currentMovie","original_title","overview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEzB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,EAA9B;;AAEA,WAASM,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,QAAI,OAAOA,GAAP,IAAc,QAAlB,EAA2B;AACzB,aAAO,KAAP;AACD;;AACD,WAAO,CAACC,KAAK,CAACD,GAAD,CAAN,IAAe,CAACC,KAAK,CAACC,UAAU,CAACF,GAAD,CAAX,CAA5B,CAJsB,CAIwB;AAC/C;;AAED,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAIP,IAAI,GAAGO,CAAC,CAACC,MAAF,CAASC,KAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AACA,QAAG,CAACA,IAAI,GAAG,GAAP,IAAcA,IAAI,GAAG,CAAtB,KAA4BA,IAA/B,EAAoC;AAClCA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACD,QAAG,CAACE,SAAS,CAACF,IAAD,CAAV,IAAoBA,IAAvB,EAA4B;AAC1BA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOX,IAAnB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAZD;;AAcA,WAASY,QAAT,GAAmB,CACjB;AAED;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAA+C,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAtD;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEd,KAAK,CAACe,KAAN,CAAYC;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BhB,KAAK,CAACe,KAAN,CAAYE,YAAZ,CAAyBC;AAArD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BlB,KAAK,CAACe,KAAN,CAAYE,YAAZ,CAAyBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACA;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,cAFZ;AAGE,YAAA,WAAW,EAAC,MAHd;AAIE,YAAA,KAAK,EAAElB,IAJT;AAKE,YAAA,QAAQ,EAAEM;AALZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,2BAAlB;AAA8C,YAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAtDD;;GAAMR,S;;KAAAA,S;AAwDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MovieCard = props => {\r\n\r\n  const[rank,setRank] = useState();\r\n\r\n  function isNumeric(str) {\r\n    if (typeof str != \"string\"){\r\n      return false\r\n    }\r\n    return !isNaN(str) && !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\r\n  }\r\n\r\n  const onChangeRank = e => {\r\n      var rank = e.target.value;\r\n      console.log(rank);\r\n      if((rank > 100 || rank < 1) && rank){\r\n        rank = \"\";\r\n      }\r\n      if(!isNumeric(rank) && rank){\r\n        rank = \"\";\r\n      }\r\n      console.log(typeof(rank));\r\n      console.log(rank);\r\n      setRank(rank);\r\n  };\r\n\r\n  function addMovie(){\r\n    //Check if rank is within range and not null\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"card border embbed-responsive\" style={{width: \"18rem\"}}>\r\n\r\n      <div className=\"card-body\">\r\n        <img className=\"card-img\" src={props.movie.image}/>\r\n        <h5 className=\"card-title\">{props.movie.currentMovie.original_title}</h5>\r\n        <p className=\"card-text\">{props.movie.currentMovie.overview}</p>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-5\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Rank\"\r\n            value={rank}\r\n            onChange={onChangeRank}\r\n          />\r\n          </div>\r\n          <div className=\"col-sm-7\">\r\n            <button className=\"btn btn-outline-secondary\" type=\"button\">Add Movie</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n"]},"metadata":{},"sourceType":"module"}