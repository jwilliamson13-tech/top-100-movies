{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\top-100-movies\\\\top-100-movies\\\\frontend\\\\src\\\\components\\\\otherProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport MovieCard from \"../components/movieCard\";\nimport DataService from \"../services/userDataService\";\nimport AuthService from \"../services/authService\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { UserContext } from \"../context/UserContext\";\nimport userDataService from \"../services/userDataService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OtherProfile = props => {\n  _s();\n\n  const history = useHistory();\n  const [userContext, setUserContext] = useContext(UserContext); //const [profileContext, setProfileContext] = useContext(UserContext);\n\n  const [movies, setMovies] = useState([]);\n  const [profile, setProfile] = useState();\n  const [buttonText, setButtonText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const params = useParams();\n  const userId = params.userId;\n  var accessToken;\n  useEffect(() => {\n    //Get profile info for page population\n    fetch(process.env.REACT_APP_API_ENDPOINT + \"users/\" + userId, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userContext.token}`\n      }\n    }).then(async response => {\n      if (response.ok) {\n        const data = await response.json();\n        setProfile(data);\n      } else {\n        if (response.status === 401) {\n          console.log(\"COULDNT FETCH PROFILE DETAILS\");\n          history.push('/'); //window.location.reload()\n        } else {\n          setProfile(null);\n        }\n      }\n    });\n  }, []);\n\n  function follow() {\n    var errorMessage = \"Error with user system. Please try again later.\";\n    fetch(process.env.REACT_APP_API_ENDPOINT + \"api/v1/follow\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userContext.token}`\n      },\n      body: JSON.stringify({\n        id: userContext.details._id,\n        followId: userId\n      })\n    }).then(async response => {\n      if (response.ok) {\n        setButtonText(\"Unfollow\");\n      } else {\n        if (response.status === 401) {\n          setError(\"Not signed in. Please sign in to add followers.\"); //window.location.reload()\n        } else {\n          setError(errorMessage);\n        }\n      }\n    });\n  }\n\n  function unfollow() {\n    var errorMessage = \"Error with user system. Please try again later.\";\n    fetch(process.env.REACT_APP_API_ENDPOINT + \"api/v1/unfollow\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userContext.token}`\n      },\n      body: JSON.stringify({\n        id: userContext.details._id,\n        followId: userId\n      })\n    }).then(async response => {\n      if (response.ok) {\n        setButtonText(\"Follow\");\n      } else {\n        if (response.status === 401) {\n          setError(\"Not signed in. Please sign in to add followers.\"); //window.location.reload()\n        } else {\n          setError(errorMessage);\n        }\n      }\n    });\n  }\n\n  function buttonController() {\n    if (buttonText == \"Follow\") {\n      follow();\n    }\n\n    if (buttonText == \"Unfollow\") {\n      unfollow();\n    }\n  }\n\n  function movieInUserFavorites(movieId) {\n    var favoriteMovies = Object.entries(userContext.details.favorite_movies);\n\n    for (var i = 0; i < favoriteMovies.length; i++) {\n      if (favoriteMovies[i][1].id == movieId) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function topThreeMovies() {\n    if (Object.entries(profile.favorite_movies).length > 0) {\n      var movieRanks = Object.keys(profile.favorite_movies);\n      var topThreeMoviesArray = [];\n\n      for (var i = 0; i < Math.min(movieRanks.length, 3); i++) {\n        var currentMovie = profile.favorite_movies[movieRanks[i]]; //Make a movie card for each and push\n\n        var movieImage = currentMovie.poster_path ? \"https://image.tmdb.org/t/p/w185/\" + currentMovie.poster_path : \"./NoMovieImage.jpg\";\n        topThreeMoviesArray.push( /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: {\n            currentMovie,\n            \"image\": movieImage,\n            \"movieAlreadyAdded\": movieInUserFavorites(currentMovie.id)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 36\n        }, this)); //topThreeMoviesArray.push(userContext.details.favorite_movies[movieRanks[i]]);\n      } //var sortedFavMovies = new Map([...userContext.details.favorite_movies].sort());\n\n\n      console.log(\"TOP THREE MOVIES\");\n      console.log(topThreeMoviesArray);\n      return topThreeMoviesArray;\n    }\n  }\n\n  function topOneHundredMovies() {\n    if (Object.entries(profile.favorite_movies).length > 0) {\n      var movieRanks = Object.keys(profile.favorite_movies);\n      var favoriteMovies = [];\n\n      for (var i = 0; i < movieRanks.length; i++) {\n        var currentMovie = profile.favorite_movies[movieRanks[i]];\n        console.log(currentMovie); //Make a movie card for each and push\n\n        var movieImage = currentMovie.poster_path ? \"https://image.tmdb.org/t/p/w185/\" + currentMovie.poster_path : \"./NoMovieImage.jpg\";\n        favoriteMovies.push( /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: {\n            currentMovie,\n            \"image\": movieImage,\n            \"movieAlreadyAdded\": movieInUserFavorites(currentMovie.id)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 31\n        }, this)); //topThreeMoviesArray.push(userContext.details.favorite_movies[movieRanks[i]]);\n      } //var sortedFavMovies = new Map([...userContext.details.favorite_movies].sort());\n\n\n      console.log(favoriteMovies);\n      return favoriteMovies;\n    }\n  }\n\n  return profile == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-3\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Email: \", profile.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Movies Favorited: \", Object.entries(profile.favorite_movies).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary text-center\",\n          type: \"button\",\n          onClick: buttonController,\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-8 align-self-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \"Top 3 Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row pt-3\",\n          children: topThreeMovies()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Top 100 Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), topOneHundredMovies(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row pt-3 pb-3 justify-content-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 7\n  }, this);\n};\n\n_s(OtherProfile, \"647O1aW78qDi+d5unoFwHadld4A=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = OtherProfile;\nexport default OtherProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherProfile\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/top-100-movies/top-100-movies/frontend/src/components/otherProfile.js"],"names":["React","useState","useEffect","useContext","useCallback","Link","useParams","useHistory","MovieCard","DataService","AuthService","useAuth0","UserContext","userDataService","OtherProfile","props","history","userContext","setUserContext","movies","setMovies","profile","setProfile","buttonText","setButtonText","error","setError","params","userId","accessToken","fetch","process","env","REACT_APP_API_ENDPOINT","method","credentials","headers","Authorization","token","then","response","ok","data","json","status","console","log","push","follow","errorMessage","body","JSON","stringify","id","details","_id","followId","unfollow","buttonController","movieInUserFavorites","movieId","favoriteMovies","Object","entries","favorite_movies","i","length","topThreeMovies","movieRanks","keys","topThreeMoviesArray","Math","min","currentMovie","movieImage","poster_path","topOneHundredMovies","email"],"mappings":"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","sourcesContent":["import React, { useState,useEffect, useContext, useCallback } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport MovieCard from \"../components/movieCard\";\r\nimport DataService from \"../services/userDataService\";\r\nimport AuthService from \"../services/authService\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport userDataService from \"../services/userDataService\";\r\n\r\nconst OtherProfile = props => {\r\n  const history = useHistory();\r\n  const [userContext, setUserContext] = useContext(UserContext);\r\n  //const [profileContext, setProfileContext] = useContext(UserContext);\r\n  const [movies, setMovies] = useState([]);\r\n  const [profile, setProfile] = useState();\r\n  const [buttonText, setButtonText] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const params = useParams();\r\n\r\n  const userId = params.userId;\r\n\r\n  var accessToken;\r\n\r\n  useEffect(() => {\r\n    //Get profile info for page population\r\n    fetch(process.env.REACT_APP_API_ENDPOINT +\"users/\"+userId, {\r\n      method:\"GET\",\r\n      credentials:\"include\",\r\n      headers: {\r\n        \"Content-Type\":\"application/json\",\r\n        Authorization: `Bearer ${userContext.token}`\r\n      }\r\n    })\r\n    .then(async response =>{\r\n      if(response.ok){\r\n        const data = await response.json();\r\n        setProfile(data);\r\n      }\r\n      else{\r\n        if(response.status === 401){\r\n          console.log(\"COULDNT FETCH PROFILE DETAILS\");\r\n          history.push('/');\r\n          //window.location.reload()\r\n        }\r\n        else{\r\n          setProfile(null);\r\n        }\r\n      }\r\n    })\r\n\r\n    \r\n  },[]);\r\n\r\n  function follow(){\r\n    var errorMessage = \"Error with user system. Please try again later.\";\r\n    fetch(process.env.REACT_APP_API_ENDPOINT +\"api/v1/follow\", {\r\n      method:\"POST\",\r\n      credentials:\"include\",\r\n      headers: {\r\n        \"Content-Type\":\"application/json\",\r\n        Authorization: `Bearer ${userContext.token}`\r\n      },\r\n      body: JSON.stringify({id:userContext.details._id,followId:userId})\r\n    })\r\n    .then(async response =>{\r\n      if(response.ok){\r\n        setButtonText(\"Unfollow\");\r\n      }\r\n      else{\r\n        if(response.status === 401){\r\n          setError(\"Not signed in. Please sign in to add followers.\");\r\n          //window.location.reload()\r\n        }\r\n        else{\r\n          setError(errorMessage);\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  function unfollow(){\r\n    var errorMessage = \"Error with user system. Please try again later.\";\r\n    fetch(process.env.REACT_APP_API_ENDPOINT +\"api/v1/unfollow\", {\r\n      method:\"POST\",\r\n      credentials:\"include\",\r\n      headers: {\r\n        \"Content-Type\":\"application/json\",\r\n        Authorization: `Bearer ${userContext.token}`\r\n      },\r\n      body: JSON.stringify({id:userContext.details._id,followId:userId})\r\n    })\r\n    .then(async response =>{\r\n      if(response.ok){\r\n        setButtonText(\"Follow\");\r\n      }\r\n      else{\r\n        if(response.status === 401){\r\n          setError(\"Not signed in. Please sign in to add followers.\");\r\n          //window.location.reload()\r\n        }\r\n        else{\r\n          setError(errorMessage);\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  function buttonController(){\r\n    if(buttonText == \"Follow\"){\r\n      follow();\r\n    }\r\n    if(buttonText == \"Unfollow\"){\r\n      unfollow();\r\n    }\r\n  }\r\n\r\n  function movieInUserFavorites(movieId){\r\n    var favoriteMovies = Object.entries(userContext.details.favorite_movies);\r\n    for(var i = 0; i < favoriteMovies.length; i++){\r\n      if(favoriteMovies[i][1].id == movieId){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  function topThreeMovies(){\r\n    if(Object.entries(profile.favorite_movies).length > 0){\r\n      var movieRanks = Object.keys(profile.favorite_movies);\r\n      var topThreeMoviesArray = [];\r\n      for(var i = 0; i < Math.min(movieRanks.length,3); i++){\r\n        var currentMovie = profile.favorite_movies[movieRanks[i]];\r\n        //Make a movie card for each and push\r\n        var movieImage = currentMovie.poster_path ? \"https://image.tmdb.org/t/p/w185/\" + currentMovie.poster_path : \"./NoMovieImage.jpg\"\r\n\r\n          topThreeMoviesArray.push(<MovieCard movie={{currentMovie,\"image\":movieImage,\"movieAlreadyAdded\":movieInUserFavorites(currentMovie.id)}}/>);\r\n\r\n        //topThreeMoviesArray.push(userContext.details.favorite_movies[movieRanks[i]]);\r\n      }\r\n      //var sortedFavMovies = new Map([...userContext.details.favorite_movies].sort());\r\n      console.log(\"TOP THREE MOVIES\");\r\n      console.log(topThreeMoviesArray);\r\n\r\n      return(topThreeMoviesArray);\r\n    }\r\n  }\r\n\r\n  function topOneHundredMovies(){\r\n    if(Object.entries(profile.favorite_movies).length > 0){\r\n      var movieRanks = Object.keys(profile.favorite_movies);\r\n      var favoriteMovies = [];\r\n      for(var i = 0; i < movieRanks.length; i++){\r\n        var currentMovie = profile.favorite_movies[movieRanks[i]];\r\n        console.log(currentMovie);\r\n        //Make a movie card for each and push\r\n        var movieImage = currentMovie.poster_path ? \"https://image.tmdb.org/t/p/w185/\" + currentMovie.poster_path : \"./NoMovieImage.jpg\"\r\n\r\n          favoriteMovies.push(<MovieCard movie={{currentMovie,\"image\":movieImage,\"movieAlreadyAdded\":movieInUserFavorites(currentMovie.id)}}/>);\r\n\r\n        //topThreeMoviesArray.push(userContext.details.favorite_movies[movieRanks[i]]);\r\n      }\r\n      //var sortedFavMovies = new Map([...userContext.details.favorite_movies].sort());\r\n      console.log(favoriteMovies);\r\n\r\n      return(favoriteMovies);\r\n    }\r\n  }\r\n\r\n  return profile == null ? (\r\n    <div className=\"container mt-3\">\r\n      <h1>LOADING...</h1>\r\n    </div>) :\r\n    (\r\n\r\n      <div className=\"container mt-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <h1>Email: {profile.email}</h1>\r\n            <h3>Movies Favorited: {Object.entries(profile.favorite_movies).length}</h3>\r\n            <button className=\"btn btn-primary text-center\" type=\"button\" onClick={buttonController}>{buttonText}</button>\r\n          </div>\r\n          <div className=\"col-lg-8 align-self-center\">\r\n            <h3 className=\"text-center\">Top 3 Movies</h3>\r\n            <div className=\"row pt-3\">\r\n              {\r\n                topThreeMovies()\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row pt-3\">\r\n          <h3 className=\"text-center\">Top 100 Movies</h3>\r\n          {\r\n            topOneHundredMovies()\r\n          }\r\n          <div className=\"row pt-3 pb-3 justify-content-center\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default OtherProfile;\r\n"]},"metadata":{},"sourceType":"module"}