{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\top-100-movies\\\\top-100-movies\\\\frontend\\\\src\\\\components\\\\movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MovieCard from \"../components/movieCard\";\nimport MoviesDataService from \"../services/dataService\";\nimport { UserContext } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = props => {\n  _s();\n\n  const [userContext, setUserContext] = useContext(UserContext);\n  const [movies, setMovies] = useState([]);\n  const [searchName, setSearchName] = useState(\"\");\n  var userMoviesArray;\n  useEffect(() => {\n    if (!userContext.details) {\n      props.props.fetchUserDetails();\n    }\n\n    console.log(userContext);\n  }, [userContext.details, props.fetchUserDetails]);\n\n  if (Object.entries(userContext.details.favorite_movies) < 1) {\n    userMoviesArray = false;\n  } else {\n    userMoviesArray = Object.entries(userContext.details.favorite_movies);\n  }\n\n  const onChangeSearchName = e => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const retrieveMovies = searchName => {\n    console.log(searchName);\n    MoviesDataService.getMovies(searchName).then(response => {\n      console.log(response.data.data.results);\n      setMovies(response.data.data.results); //Gonna have to change this to match data received\n\n      console.log(movies);\n    });\n  }; //Write a function to compare movies ID\n\n\n  function areSameMovie(firstMovie, secondMovie) {\n    if (firstMovie.id == secondMovie.id) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pr-5 pl-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Search for Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group col-lg-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by name\",\n          value: searchName,\n          onChange: onChangeSearchName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: () => retrieveMovies(searchName) //Need to add on click event and state event here\n            ,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-3 pb-3 justify-content-center\",\n      children: movies.map(currentMovie => {\n        var movieImage = currentMovie.poster_path ? \"https://image.tmdb.org/t/p/w185/\" + currentMovie.poster_path : \"./NoMovieImage.jpg\";\n        var movieAlreadyAdded; //Determine if movie is already added\n\n        if (!userMoviesArray) {\n          movieAlreadyAdded = false;\n        } else {\n          //movieAlreadyAdded = false;\n          console.log(userMoviesArray);\n\n          for (var i = 0; i < userMoviesArray.length; i++) {\n            if (areSameMovie(currentMovie, userMoviesArray[i][1])) {\n              movieAlreadyAdded = true;\n              break;\n            } else {\n              movieAlreadyAdded = false;\n            }\n          }\n          /*\r\n          console.log(currentMovie);\r\n          //console.log(userContext.details.favorite_movies);\r\n          console.log(Array.from(Object.entries(userContext.details.favorite_movies)));\r\n          movieAlreadyAdded = Array.from(Object.entries(userContext.details.favorite_movies)).includes(currentMovie);\r\n          */\n\n        }\n\n        return /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: {\n            currentMovie,\n            \"image\": movieImage,\n            \"movieAlreadyAdded\": movieAlreadyAdded\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}; //{movies.map((movies) =>{\n//<MovieCard movie={{\"name\":\"Mean Girls\",\"description\":\"Girls are mean. I don't know what you expected.\",\"image\":\"https://image.tmdb.org/t/p/w185/fXm3YKXAEjx7d2tIWDg9TfRZtsU.jpg\"}}/>\n//<MovieCard movie={{\"name\":\"Toy Story\",\"description\":\"Toys do some crazy shit on this wild ass adventure. Be prepared to be scared because the neighbor kid is batshit, and you'll think your own toys may come to life to kill you one day. Pick up your phobia of dolls and toys with eyes now!!!\",\"image\":\"https://image.tmdb.org/t/p/w185/uXDfjJbdP4ijW5hWSBrPrlKpxab.jpg\"}}/>\n//<MovieCard movie={{\"name\":\"Mean Girls\",\"description\":\"Girls are mean. I don't know what you expected.\",\"image\":\"https://image.tmdb.org/t/p/w185/xj3jhyq3ZsfdVn79kXC1XKFVQlv.jpg\"}}/>\n//}};\n\n\n_s(Movies, \"0EUngehn1ORuL/F12FgSSDI/CTo=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/top-100-movies/top-100-movies/frontend/src/components/movies.js"],"names":["React","useState","useEffect","useContext","Link","MovieCard","MoviesDataService","UserContext","Movies","props","userContext","setUserContext","movies","setMovies","searchName","setSearchName","userMoviesArray","details","fetchUserDetails","console","log","Object","entries","favorite_movies","onChangeSearchName","e","target","value","retrieveMovies","getMovies","then","response","data","results","areSameMovie","firstMovie","secondMovie","id","map","currentMovie","movieImage","poster_path","movieAlreadyAdded","i","length"],"mappings":"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","sourcesContent":["import React, { useState,useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MovieCard from \"../components/movieCard\";\r\nimport MoviesDataService from \"../services/dataService\";\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\nconst Movies = props => {\r\n  const [userContext, setUserContext] = useContext(UserContext);\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchName, setSearchName ] = useState(\"\");\r\n\r\n  var userMoviesArray;\r\n\r\n  useEffect(()=>{\r\n      if (!userContext.details) {\r\n        props.props.fetchUserDetails()\r\n      }\r\n      console.log(userContext);\r\n    }, [userContext.details, props.fetchUserDetails]);\r\n\r\n  if(Object.entries(userContext.details.favorite_movies) < 1){\r\n    userMoviesArray = false;\r\n  }\r\n  else{\r\n    userMoviesArray = Object.entries(userContext.details.favorite_movies);\r\n  }\r\n\r\n\r\n  const onChangeSearchName = e => {\r\n      const searchName = e.target.value;\r\n      setSearchName(searchName);\r\n  };\r\n\r\n  const retrieveMovies = (searchName) => {\r\n      console.log(searchName);\r\n      MoviesDataService.getMovies(searchName)\r\n      .then(response => {\r\n        console.log(response.data.data.results);\r\n        setMovies(response.data.data.results); //Gonna have to change this to match data received\r\n        console.log(movies);\r\n      })\r\n    };\r\n\r\n    //Write a function to compare movies ID\r\n    function areSameMovie(firstMovie, secondMovie){\r\n      if(firstMovie.id == secondMovie.id){\r\n        return true;\r\n      }\r\n      else{\r\n        return false;\r\n      }\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"container pr-5 pl-5\">\r\n      <h1 className=\"text-center\">Search for Movies</h1>\r\n      <div className=\"row pb-1\">\r\n        <div className=\"input-group col-lg-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by name\"\r\n            value={searchName}\r\n            onChange={onChangeSearchName}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={() => retrieveMovies(searchName)}\r\n              //Need to add on click event and state event here\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row pt-3 pb-3 justify-content-center\">\r\n          {\r\n            movies.map(currentMovie => {\r\n              var movieImage = currentMovie.poster_path ? \"https://image.tmdb.org/t/p/w185/\" + currentMovie.poster_path : \"./NoMovieImage.jpg\"\r\n              var movieAlreadyAdded;\r\n              //Determine if movie is already added\r\n              if(!userMoviesArray){\r\n                movieAlreadyAdded = false;\r\n              }\r\n              else{\r\n                //movieAlreadyAdded = false;\r\n                console.log(userMoviesArray);\r\n                for(var i = 0; i < userMoviesArray.length; i++){\r\n                  if(areSameMovie(currentMovie,userMoviesArray[i][1])){\r\n                    movieAlreadyAdded = true;\r\n                    break;\r\n                  }\r\n                  else{\r\n                    movieAlreadyAdded = false;\r\n                  }\r\n                }\r\n                /*\r\n                console.log(currentMovie);\r\n                //console.log(userContext.details.favorite_movies);\r\n                console.log(Array.from(Object.entries(userContext.details.favorite_movies)));\r\n                movieAlreadyAdded = Array.from(Object.entries(userContext.details.favorite_movies)).includes(currentMovie);\r\n                */\r\n              }\r\n\r\n              return(\r\n                <MovieCard movie={{currentMovie,\"image\":movieImage,\"movieAlreadyAdded\":movieAlreadyAdded}}/>\r\n              )\r\n            })\r\n          }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//{movies.map((movies) =>{\r\n//<MovieCard movie={{\"name\":\"Mean Girls\",\"description\":\"Girls are mean. I don't know what you expected.\",\"image\":\"https://image.tmdb.org/t/p/w185/fXm3YKXAEjx7d2tIWDg9TfRZtsU.jpg\"}}/>\r\n//<MovieCard movie={{\"name\":\"Toy Story\",\"description\":\"Toys do some crazy shit on this wild ass adventure. Be prepared to be scared because the neighbor kid is batshit, and you'll think your own toys may come to life to kill you one day. Pick up your phobia of dolls and toys with eyes now!!!\",\"image\":\"https://image.tmdb.org/t/p/w185/uXDfjJbdP4ijW5hWSBrPrlKpxab.jpg\"}}/>\r\n//<MovieCard movie={{\"name\":\"Mean Girls\",\"description\":\"Girls are mean. I don't know what you expected.\",\"image\":\"https://image.tmdb.org/t/p/w185/xj3jhyq3ZsfdVn79kXC1XKFVQlv.jpg\"}}/>\r\n//}};\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}